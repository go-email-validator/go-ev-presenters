syntax = "proto3";

package github.com.go_email_validator.go_ev_presenters.api.v1;
option go_package = "github.com/go-email-validator/go-ev-presenters/pkg/api/v1";

import "github.com/go-email-validator/go-ev-presenters/pkg/presenter/check_if_email_exist/check_if_email_exist.proto";
import "github.com/go-email-validator/go-ev-presenters/pkg/presenter/mailboxvalidator/mailboxvalidator.proto";
import "github.com/go-email-validator/go-ev-presenters/pkg/presenter/prompt_email_verification_api/prompt_email_verification_api.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Email Validator"
    version: "0.0.1"
  }
  security_definitions: {
    security: {
      key: "BearerAuth";
      value: {
        in: IN_HEADER;
        type: TYPE_API_KEY;
        name: "Authorization";

      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth";
      value: {}
    }
  }
};

service EmailValidation {
  rpc singleValidation(EmailRequest) returns (EmailResponse) {
    option (google.api.http) = {
      post: "/v1/validation/single"
      body: "*"
      additional_bindings {
        get: "/v1/validation/single/{email}"
      }
    };
  }
}

message EmailRequest {
  string email = 1;
  ResultType result_type = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "* CHECK_IF_EMAIL_EXIST, CIEE - [check-if-email-exists format](https://github.com/amaurymartiny/check-if-email-exists#%EF%B8%8F-json-output).\n"
        "* MAILBOXVALIDATOR, MAIL_BOX_VALIDATOR, MBV - [mailboxvalidator.com format](https://www.mailboxvalidator.com/api-single-validation).\n"
        "* PROMPT_EMAIL_VERIFICATION_API, PEVA - [Email Verification api format](https://promptapi.com/marketplace/description/email_verification-api) from [promptapi](https://promptapi.com).\n"
  }];
  // TODO find solution without duplication
  /*ResultType

  \* CHECK_IF_EMAIL_EXIST, CIEE - [check-if-email-exists format](https://github.com/amaurymartiny/check-if-email-exists#%EF%B8%8F-json-output).
  \* MAILBOXVALIDATOR, MAIL_BOX_VALIDATOR, MBV - [mailboxvalidator.com format](https://www.mailboxvalidator.com/api-single-validation).
  \* PROMPT_EMAIL_VERIFICATION_API, PEVA - [Email Verification api format](https://promptapi.com/marketplace/description/email_verification-api) from [promptapi](https://promptapi.com).
  */
  enum ResultType {
    option allow_alias = true;
    CHECK_IF_EMAIL_EXIST = 0;
    CIEE = 0;
    MAILBOXVALIDATOR = 1;
    MAIL_BOX_VALIDATOR = 1;
    MBV = 1;
    PROMPT_EMAIL_VERIFICATION_API = 2;
    PEVA = 2;
  }
}

message EmailResponse {
  oneof result {
    github.com.go_email_validator.go_ev_presenters.pkg.presenters.check_if_email_exist.Result check_if_email_exist = 1;
    github.com.go_email_validator.go_ev_presenters.pkg.presenters.mailboxvalidator.Result mail_box_validator = 2;
    github.com.go_email_validator.go_ev_presenters.pkg.presenters.prompt_email_verification_api.Result prompt_email_verification_api = 3;
  }
}
