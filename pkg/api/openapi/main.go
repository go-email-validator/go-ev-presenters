/*
 * Email Validator
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 0.0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package main

import (
	swagger "github.com/go-email-validator/go-ev-presenters/pkg/api/openapi/go"
	"github.com/go-email-validator/go-ev-presenters/pkg/presenter"
	"github.com/go-email-validator/go-ev-presenters/pkg/presenter/check_if_email_exist"
	"github.com/go-email-validator/go-ev-presenters/pkg/presenter/mailboxvalidator"
	"github.com/go-email-validator/go-ev-presenters/pkg/presenter/preparer"
	"github.com/go-email-validator/go-ev-presenters/pkg/presenter/prompt_email_verification_api"
	"github.com/gofiber/fiber/v2"
	"log"
	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    sw "github.com/myname/myrepo/go"
	//
)

var getPresenter = presenter.NewMultiplePresentersDefault

func main() {
	app := fiber.New()
	log.Printf("Server started")

	server := swagger.EmailValidationApiController{
		Presenter: getPresenter(nil),
		Matching: map[swagger.ResultType]preparer.Name{
			swagger.CIEE:                          check_if_email_exist.Name,
			swagger.CHECK_IF_EMAIL_EXIST:          check_if_email_exist.Name,
			swagger.MBV:                           mailboxvalidator.Name,
			swagger.MAILBOXVALIDATOR:              mailboxvalidator.Name,
			swagger.MAIL_BOX_VALIDATOR:            mailboxvalidator.Name,
			swagger.PEVA:                          prompt_email_verification_api.Name,
			swagger.PROMPT_EMAIL_VERIFICATION_API: prompt_email_verification_api.Name,
		},
	}

	app.Post("/v1/validation/single", server.EmailValidationSingleValidationPost)
	app.Get("/v1/validation/single/:email", server.EmailValidationSingleValidationGet)

	log.Fatal(app.Listen(":3000"))
}
