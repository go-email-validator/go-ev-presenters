// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ev.proto

package v1

import (
	context "context"
	fmt "fmt"
	check_if_email_exist "github.com/go-email-validator/go-ev-presenters/pkg/api/v1/check_if_email_exist"
	mailboxvalidator "github.com/go-email-validator/go-ev-presenters/pkg/api/v1/mailboxvalidator"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResultType int32

const (
	ResultType_CHECK_IF_EMAIL_EXIST ResultType = 0
	ResultType_CIEE                 ResultType = 0
	ResultType_MAILBOXVALIDATOR     ResultType = 1
	ResultType_MAIL_BOX_VALIDATOR   ResultType = 1
	ResultType_MBV                  ResultType = 1
)

var ResultType_name = map[int32]string{
	0: "CHECK_IF_EMAIL_EXIST",
	// Duplicate value: 0: "CIEE",
	1: "MAILBOXVALIDATOR",
	// Duplicate value: 1: "MAIL_BOX_VALIDATOR",
	// Duplicate value: 1: "MBV",
}

var ResultType_value = map[string]int32{
	"CHECK_IF_EMAIL_EXIST": 0,
	"CIEE":                 0,
	"MAILBOXVALIDATOR":     1,
	"MAIL_BOX_VALIDATOR":   1,
	"MBV":                  1,
}

func (x ResultType) String() string {
	return proto.EnumName(ResultType_name, int32(x))
}

func (ResultType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9dd0443f2ac7fc36, []int{0}
}

type EmailRequest struct {
	Email                string     `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	ResultType           ResultType `protobuf:"varint,2,opt,name=result_type,json=resultType,proto3,enum=github.com.go_email_validator.go_ev_presenters.api.v1.ResultType" json:"result_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dd0443f2ac7fc36, []int{0}
}
func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *EmailRequest) GetResultType() ResultType {
	if m != nil {
		return m.ResultType
	}
	return ResultType_CHECK_IF_EMAIL_EXIST
}

type EmailResponse struct {
	// Types that are valid to be assigned to Result:
	//	*EmailResponse_CheckIfEmailExist
	//	*EmailResponse_MailBoxValidator
	Result               isEmailResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EmailResponse) Reset()         { *m = EmailResponse{} }
func (m *EmailResponse) String() string { return proto.CompactTextString(m) }
func (*EmailResponse) ProtoMessage()    {}
func (*EmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dd0443f2ac7fc36, []int{1}
}
func (m *EmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailResponse.Unmarshal(m, b)
}
func (m *EmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailResponse.Marshal(b, m, deterministic)
}
func (m *EmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailResponse.Merge(m, src)
}
func (m *EmailResponse) XXX_Size() int {
	return xxx_messageInfo_EmailResponse.Size(m)
}
func (m *EmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmailResponse proto.InternalMessageInfo

type isEmailResponse_Result interface {
	isEmailResponse_Result()
}

type EmailResponse_CheckIfEmailExist struct {
	CheckIfEmailExist *check_if_email_exist.Result `protobuf:"bytes,1,opt,name=check_if_email_exist,json=checkIfEmailExist,proto3,oneof" json:"check_if_email_exist,omitempty"`
}
type EmailResponse_MailBoxValidator struct {
	MailBoxValidator *mailboxvalidator.Result `protobuf:"bytes,2,opt,name=mail_box_validator,json=mailBoxValidator,proto3,oneof" json:"mail_box_validator,omitempty"`
}

func (*EmailResponse_CheckIfEmailExist) isEmailResponse_Result() {}
func (*EmailResponse_MailBoxValidator) isEmailResponse_Result()  {}

func (m *EmailResponse) GetResult() isEmailResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *EmailResponse) GetCheckIfEmailExist() *check_if_email_exist.Result {
	if x, ok := m.GetResult().(*EmailResponse_CheckIfEmailExist); ok {
		return x.CheckIfEmailExist
	}
	return nil
}

func (m *EmailResponse) GetMailBoxValidator() *mailboxvalidator.Result {
	if x, ok := m.GetResult().(*EmailResponse_MailBoxValidator); ok {
		return x.MailBoxValidator
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EmailResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EmailResponse_CheckIfEmailExist)(nil),
		(*EmailResponse_MailBoxValidator)(nil),
	}
}

func init() {
	proto.RegisterEnum("github.com.go_email_validator.go_ev_presenters.api.v1.ResultType", ResultType_name, ResultType_value)
	proto.RegisterType((*EmailRequest)(nil), "github.com.go_email_validator.go_ev_presenters.api.v1.EmailRequest")
	proto.RegisterType((*EmailResponse)(nil), "github.com.go_email_validator.go_ev_presenters.api.v1.EmailResponse")
}

func init() { proto.RegisterFile("ev.proto", fileDescriptor_9dd0443f2ac7fc36) }

var fileDescriptor_9dd0443f2ac7fc36 = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xce, 0x06, 0x28, 0x61, 0xc2, 0x8f, 0x59, 0x05, 0x14, 0x45, 0x20, 0xaa, 0x9c, 0xaa, 0x4a,
	0xf1, 0x2a, 0x41, 0x1c, 0xa0, 0x27, 0x3b, 0x35, 0xaa, 0x45, 0xab, 0x48, 0x26, 0x8a, 0xa2, 0x1c,
	0xb0, 0xec, 0xb0, 0x75, 0x57, 0x71, 0xbd, 0x8b, 0x77, 0x63, 0xa5, 0x42, 0x5c, 0x38, 0x20, 0x2e,
	0x9c, 0x78, 0x13, 0x5e, 0x85, 0x17, 0xe0, 0xc0, 0x23, 0xf0, 0x00, 0xc8, 0xeb, 0x10, 0x07, 0x94,
	0x0b, 0xc9, 0xcd, 0x3b, 0xdf, 0xcc, 0xf7, 0x7d, 0xfa, 0x3c, 0x03, 0x35, 0x9a, 0x99, 0x22, 0xe5,
	0x8a, 0xe3, 0x67, 0x11, 0x53, 0x17, 0xf3, 0xd0, 0x9c, 0xf2, 0x4b, 0x33, 0xe2, 0x3e, 0xbd, 0x0c,
	0x58, 0xec, 0x67, 0x41, 0xcc, 0xde, 0x06, 0x8a, 0xa7, 0xba, 0x94, 0xf9, 0x22, 0xa5, 0x92, 0x26,
	0x8a, 0xa6, 0xd2, 0x0c, 0x04, 0x33, 0xb3, 0x6e, 0xeb, 0x4d, 0x39, 0x46, 0x22, 0xde, 0xd1, 0x63,
	0x9d, 0xd5, 0x98, 0x2e, 0x65, 0x9d, 0x72, 0x8c, 0x88, 0x59, 0x44, 0x56, 0x4f, 0x32, 0xbd, 0xa0,
	0xd3, 0x99, 0xcf, 0xce, 0x97, 0x72, 0x74, 0xc1, 0xa4, 0x22, 0x29, 0x95, 0xf3, 0x58, 0x15, 0xb6,
	0x5a, 0x93, 0x9d, 0xf8, 0xf3, 0xee, 0x90, 0x2f, 0xca, 0xfe, 0xbf, 0xb8, 0x1f, 0x45, 0x9c, 0x47,
	0x31, 0x25, 0x81, 0x60, 0x24, 0x48, 0x12, 0xae, 0x02, 0xc5, 0x78, 0x22, 0x0b, 0xb4, 0xfd, 0x19,
	0xc1, 0x6d, 0x27, 0x27, 0xf0, 0xe8, 0xbb, 0x39, 0x95, 0x0a, 0x37, 0xe0, 0x86, 0x96, 0x6f, 0xa2,
	0x7d, 0x74, 0x70, 0xcb, 0x2b, 0x1e, 0x38, 0x84, 0x7a, 0x41, 0xea, 0xab, 0x2b, 0x41, 0x9b, 0xd5,
	0x7d, 0x74, 0x70, 0xb7, 0x67, 0x99, 0x5b, 0xa5, 0x69, 0x7a, 0x9a, 0x69, 0x78, 0x25, 0xa8, 0x07,
	0xe9, 0xea, 0xbb, 0xfd, 0xad, 0x0a, 0x77, 0x96, 0x56, 0xa4, 0xe0, 0x89, 0xa4, 0xf8, 0x0b, 0x82,
	0xc6, 0xa6, 0xf0, 0xb4, 0xb7, 0x7a, 0x6f, 0xf2, 0xbf, 0xfa, 0x62, 0x16, 0x99, 0x6b, 0xcf, 0x4d,
	0xd4, 0x4b, 0x73, 0x27, 0x15, 0xef, 0xbe, 0x86, 0xdd, 0x73, 0x6d, 0xc9, 0xc9, 0x31, 0xfc, 0x09,
	0x01, 0xd6, 0xad, 0x21, 0x5f, 0x94, 0x3a, 0x3a, 0x8d, 0x7a, 0x6f, 0xb4, 0xa3, 0x9b, 0x7f, 0xff,
	0x62, 0xe9, 0xc4, 0xc8, 0x21, 0x9b, 0x2f, 0x46, 0x7f, 0x20, 0xbb, 0x06, 0x7b, 0x45, 0x70, 0x87,
	0x33, 0x80, 0x32, 0x4e, 0xdc, 0x84, 0x46, 0xff, 0xc4, 0xe9, 0xbf, 0xf2, 0xdd, 0x97, 0xbe, 0x73,
	0x66, 0xb9, 0xa7, 0xbe, 0x33, 0x76, 0x5f, 0x0f, 0x8d, 0x0a, 0xae, 0xc1, 0xf5, 0xbe, 0xeb, 0x38,
	0x46, 0x05, 0x37, 0xc0, 0xc8, 0x11, 0x7b, 0x30, 0x1e, 0x59, 0xa7, 0xee, 0xb1, 0x35, 0x1c, 0x78,
	0x06, 0xc2, 0x0f, 0x01, 0xeb, 0x7e, 0x7b, 0x30, 0xf6, 0xd7, 0xeb, 0x37, 0xe1, 0xda, 0x99, 0x3d,
	0x32, 0x50, 0xab, 0x6a, 0xa0, 0xde, 0x2f, 0x04, 0xf7, 0x74, 0x1c, 0x4b, 0x27, 0x8c, 0x27, 0xf8,
	0x07, 0x02, 0x43, 0xb2, 0x24, 0x8a, 0xe9, 0x5a, 0xb1, 0xbf, 0xe5, 0x66, 0xac, 0x6f, 0x62, 0xeb,
	0x78, 0x37, 0x92, 0x62, 0x87, 0xda, 0xd6, 0xc7, 0xef, 0x3f, 0xbf, 0x56, 0x8f, 0xda, 0x0f, 0x48,
	0xd6, 0x25, 0xd9, 0xca, 0x22, 0x29, 0x3c, 0xbf, 0x40, 0x87, 0x93, 0x27, 0xf8, 0xf1, 0x46, 0x8c,
	0xbc, 0xd7, 0x8a, 0x1f, 0xec, 0xa3, 0xc9, 0xf3, 0x2d, 0xee, 0x33, 0xbf, 0xb7, 0xac, 0x1b, 0xee,
	0xe9, 0x3b, 0x7b, 0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x91, 0xd4, 0x96, 0xdd, 0x84, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmailValidationClient is the client API for EmailValidation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailValidationClient interface {
	SingleValidation(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*EmailResponse, error)
}

type emailValidationClient struct {
	cc *grpc.ClientConn
}

func NewEmailValidationClient(cc *grpc.ClientConn) EmailValidationClient {
	return &emailValidationClient{cc}
}

func (c *emailValidationClient) SingleValidation(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*EmailResponse, error) {
	out := new(EmailResponse)
	err := c.cc.Invoke(ctx, "/github.com.go_email_validator.go_ev_presenters.api.v1.EmailValidation/singleValidation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailValidationServer is the server API for EmailValidation service.
type EmailValidationServer interface {
	SingleValidation(context.Context, *EmailRequest) (*EmailResponse, error)
}

// UnimplementedEmailValidationServer can be embedded to have forward compatible implementations.
type UnimplementedEmailValidationServer struct {
}

func (*UnimplementedEmailValidationServer) SingleValidation(ctx context.Context, req *EmailRequest) (*EmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SingleValidation not implemented")
}

func RegisterEmailValidationServer(s *grpc.Server, srv EmailValidationServer) {
	s.RegisterService(&_EmailValidation_serviceDesc, srv)
}

func _EmailValidation_SingleValidation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailValidationServer).SingleValidation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.go_email_validator.go_ev_presenters.api.v1.EmailValidation/SingleValidation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailValidationServer).SingleValidation(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailValidation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.go_email_validator.go_ev_presenters.api.v1.EmailValidation",
	HandlerType: (*EmailValidationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "singleValidation",
			Handler:    _EmailValidation_SingleValidation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ev.proto",
}
