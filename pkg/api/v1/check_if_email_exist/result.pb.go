// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: result.proto

package check_if_email_exist

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Result struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	IsReachable          string   `protobuf:"bytes,2,opt,name=is_reachable,json=isReachable,proto3" json:"is_reachable,omitempty"`
	Misc                 *Misc    `protobuf:"bytes,3,opt,name=misc,proto3" json:"misc,omitempty"`
	MX                   *MX      `protobuf:"bytes,4,opt,name=mx,proto3" json:"mx,omitempty"`
	SMTP                 *SMTP    `protobuf:"bytes,5,opt,name=smtp,proto3" json:"smtp,omitempty"`
	Syntax               *Syntax  `protobuf:"bytes,6,opt,name=syntax,proto3" json:"syntax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{0}
}
func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *Result) GetIsReachable() string {
	if m != nil {
		return m.IsReachable
	}
	return ""
}

func (m *Result) GetMisc() *Misc {
	if m != nil {
		return m.Misc
	}
	return nil
}

func (m *Result) GetMx() *MX {
	if m != nil {
		return m.MX
	}
	return nil
}

func (m *Result) GetSmtp() *SMTP {
	if m != nil {
		return m.SMTP
	}
	return nil
}

func (m *Result) GetSyntax() *Syntax {
	if m != nil {
		return m.Syntax
	}
	return nil
}

type Disposable struct {
	IsDisposable         bool     `protobuf:"varint,1,opt,name=is_disposable,json=isDisposable,proto3" json:"is_disposable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Disposable) Reset()         { *m = Disposable{} }
func (m *Disposable) String() string { return proto.CompactTextString(m) }
func (*Disposable) ProtoMessage()    {}
func (*Disposable) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{1}
}
func (m *Disposable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Disposable.Unmarshal(m, b)
}
func (m *Disposable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Disposable.Marshal(b, m, deterministic)
}
func (m *Disposable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Disposable.Merge(m, src)
}
func (m *Disposable) XXX_Size() int {
	return xxx_messageInfo_Disposable.Size(m)
}
func (m *Disposable) XXX_DiscardUnknown() {
	xxx_messageInfo_Disposable.DiscardUnknown(m)
}

var xxx_messageInfo_Disposable proto.InternalMessageInfo

func (m *Disposable) GetIsDisposable() bool {
	if m != nil {
		return m.IsDisposable
	}
	return false
}

type MX struct {
	AcceptsMail          bool     `protobuf:"varint,1,opt,name=accepts_mail,json=acceptsMail,proto3" json:"accepts_mail,omitempty"`
	Records              []string `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MX) Reset()         { *m = MX{} }
func (m *MX) String() string { return proto.CompactTextString(m) }
func (*MX) ProtoMessage()    {}
func (*MX) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{2}
}
func (m *MX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MX.Unmarshal(m, b)
}
func (m *MX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MX.Marshal(b, m, deterministic)
}
func (m *MX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MX.Merge(m, src)
}
func (m *MX) XXX_Size() int {
	return xxx_messageInfo_MX.Size(m)
}
func (m *MX) XXX_DiscardUnknown() {
	xxx_messageInfo_MX.DiscardUnknown(m)
}

var xxx_messageInfo_MX proto.InternalMessageInfo

func (m *MX) GetAcceptsMail() bool {
	if m != nil {
		return m.AcceptsMail
	}
	return false
}

func (m *MX) GetRecords() []string {
	if m != nil {
		return m.Records
	}
	return nil
}

type Misc struct {
	IsDisposable         bool     `protobuf:"varint,1,opt,name=is_disposable,json=isDisposable,proto3" json:"is_disposable,omitempty"`
	IsRoleAccount        bool     `protobuf:"varint,2,opt,name=is_role_account,json=isRoleAccount,proto3" json:"is_role_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Misc) Reset()         { *m = Misc{} }
func (m *Misc) String() string { return proto.CompactTextString(m) }
func (*Misc) ProtoMessage()    {}
func (*Misc) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{3}
}
func (m *Misc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Misc.Unmarshal(m, b)
}
func (m *Misc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Misc.Marshal(b, m, deterministic)
}
func (m *Misc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Misc.Merge(m, src)
}
func (m *Misc) XXX_Size() int {
	return xxx_messageInfo_Misc.Size(m)
}
func (m *Misc) XXX_DiscardUnknown() {
	xxx_messageInfo_Misc.DiscardUnknown(m)
}

var xxx_messageInfo_Misc proto.InternalMessageInfo

func (m *Misc) GetIsDisposable() bool {
	if m != nil {
		return m.IsDisposable
	}
	return false
}

func (m *Misc) GetIsRoleAccount() bool {
	if m != nil {
		return m.IsRoleAccount
	}
	return false
}

type SMTP struct {
	CanConnectSmtp       bool     `protobuf:"varint,1,opt,name=can_connect_smtp,json=canConnectSmtp,proto3" json:"can_connect_smtp,omitempty"`
	HasFullInbox         bool     `protobuf:"varint,2,opt,name=has_full_inbox,json=hasFullInbox,proto3" json:"has_full_inbox,omitempty"`
	IsCatchAll           bool     `protobuf:"varint,3,opt,name=is_catch_all,json=isCatchAll,proto3" json:"is_catch_all,omitempty"`
	IsDeliverable        bool     `protobuf:"varint,4,opt,name=is_deliverable,json=isDeliverable,proto3" json:"is_deliverable,omitempty"`
	IsDisabled           bool     `protobuf:"varint,5,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMTP) Reset()         { *m = SMTP{} }
func (m *SMTP) String() string { return proto.CompactTextString(m) }
func (*SMTP) ProtoMessage()    {}
func (*SMTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{4}
}
func (m *SMTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMTP.Unmarshal(m, b)
}
func (m *SMTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMTP.Marshal(b, m, deterministic)
}
func (m *SMTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMTP.Merge(m, src)
}
func (m *SMTP) XXX_Size() int {
	return xxx_messageInfo_SMTP.Size(m)
}
func (m *SMTP) XXX_DiscardUnknown() {
	xxx_messageInfo_SMTP.DiscardUnknown(m)
}

var xxx_messageInfo_SMTP proto.InternalMessageInfo

func (m *SMTP) GetCanConnectSmtp() bool {
	if m != nil {
		return m.CanConnectSmtp
	}
	return false
}

func (m *SMTP) GetHasFullInbox() bool {
	if m != nil {
		return m.HasFullInbox
	}
	return false
}

func (m *SMTP) GetIsCatchAll() bool {
	if m != nil {
		return m.IsCatchAll
	}
	return false
}

func (m *SMTP) GetIsDeliverable() bool {
	if m != nil {
		return m.IsDeliverable
	}
	return false
}

func (m *SMTP) GetIsDisabled() bool {
	if m != nil {
		return m.IsDisabled
	}
	return false
}

type Syntax struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	IsValidSyntax        bool     `protobuf:"varint,3,opt,name=is_valid_syntax,json=isValidSyntax,proto3" json:"is_valid_syntax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Syntax) Reset()         { *m = Syntax{} }
func (m *Syntax) String() string { return proto.CompactTextString(m) }
func (*Syntax) ProtoMessage()    {}
func (*Syntax) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{5}
}
func (m *Syntax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Syntax.Unmarshal(m, b)
}
func (m *Syntax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Syntax.Marshal(b, m, deterministic)
}
func (m *Syntax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Syntax.Merge(m, src)
}
func (m *Syntax) XXX_Size() int {
	return xxx_messageInfo_Syntax.Size(m)
}
func (m *Syntax) XXX_DiscardUnknown() {
	xxx_messageInfo_Syntax.DiscardUnknown(m)
}

var xxx_messageInfo_Syntax proto.InternalMessageInfo

func (m *Syntax) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Syntax) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Syntax) GetIsValidSyntax() bool {
	if m != nil {
		return m.IsValidSyntax
	}
	return false
}

func init() {
	proto.RegisterType((*Result)(nil), "github.com.go_email_validator.go_ev_presenters.pkg.presenter.check_if_email_exist.Result")
	proto.RegisterType((*Disposable)(nil), "github.com.go_email_validator.go_ev_presenters.pkg.presenter.check_if_email_exist.Disposable")
	proto.RegisterType((*MX)(nil), "github.com.go_email_validator.go_ev_presenters.pkg.presenter.check_if_email_exist.MX")
	proto.RegisterType((*Misc)(nil), "github.com.go_email_validator.go_ev_presenters.pkg.presenter.check_if_email_exist.Misc")
	proto.RegisterType((*SMTP)(nil), "github.com.go_email_validator.go_ev_presenters.pkg.presenter.check_if_email_exist.SMTP")
	proto.RegisterType((*Syntax)(nil), "github.com.go_email_validator.go_ev_presenters.pkg.presenter.check_if_email_exist.Syntax")
}

func init() { proto.RegisterFile("result.proto", fileDescriptor_4feee897733d2100) }

var fileDescriptor_4feee897733d2100 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcd, 0x8e, 0xda, 0x30,
	0x14, 0x85, 0xc5, 0xcf, 0xa4, 0xcc, 0x85, 0xa1, 0x95, 0x55, 0x55, 0x51, 0x37, 0xa5, 0xe9, 0x8f,
	0xd8, 0x10, 0x34, 0xed, 0x13, 0xd0, 0x41, 0x95, 0xba, 0xa0, 0x1a, 0x99, 0x6a, 0x84, 0x66, 0x63,
	0x19, 0xc7, 0x10, 0x0b, 0x27, 0x8e, 0x6c, 0x07, 0xd1, 0xb7, 0xeb, 0x6b, 0x75, 0x57, 0xd9, 0x31,
	0xd0, 0x45, 0x17, 0x5d, 0x0c, 0xcb, 0x73, 0x30, 0xf7, 0xf8, 0xde, 0xfb, 0x39, 0x30, 0xd0, 0xdc,
	0xd4, 0xd2, 0xa6, 0x95, 0x56, 0x56, 0x21, 0xbc, 0x15, 0x36, 0xaf, 0xd7, 0x29, 0x53, 0x45, 0xba,
	0x55, 0x84, 0x17, 0x54, 0x48, 0xb2, 0xa7, 0x52, 0x64, 0xd4, 0x2a, 0xed, 0xad, 0x3d, 0xa9, 0x34,
	0x37, 0xbc, 0xb4, 0x5c, 0x9b, 0xb4, 0xda, 0x6d, 0xd3, 0xbf, 0x24, 0xcb, 0x39, 0xdb, 0x11, 0xb1,
	0x09, 0x7f, 0xe4, 0x07, 0x61, 0x6c, 0xf2, 0xbb, 0x03, 0x11, 0xf6, 0x21, 0xe8, 0x25, 0x5c, 0x89,
	0xb2, 0xaa, 0x6d, 0xdc, 0x1a, 0xb5, 0xc6, 0xd7, 0xb8, 0x11, 0xe8, 0x2d, 0x0c, 0x84, 0x21, 0x9a,
	0x53, 0x96, 0xd3, 0xb5, 0xe4, 0x71, 0xdb, 0xff, 0xd8, 0x17, 0x06, 0x1f, 0x2d, 0x24, 0xa1, 0x5b,
	0x08, 0xc3, 0xe2, 0xce, 0xa8, 0x35, 0xee, 0x7f, 0x5a, 0xa5, 0x4f, 0x7f, 0xcd, 0x74, 0x21, 0x0c,
	0xc3, 0x3e, 0x05, 0x6d, 0xa0, 0x5d, 0x1c, 0xe2, 0xae, 0xcf, 0x7a, 0xb8, 0x48, 0xd6, 0x0a, 0xb7,
	0x8b, 0x83, 0xeb, 0xca, 0x14, 0xb6, 0x8a, 0xaf, 0x2e, 0xd7, 0xd5, 0x72, 0xf1, 0xe3, 0x1e, 0xfb,
	0x14, 0xa4, 0x21, 0x32, 0x3f, 0x4b, 0x4b, 0x0f, 0x71, 0xe4, 0xf3, 0x1e, 0x2f, 0x92, 0xe7, 0x13,
	0x70, 0x48, 0x4a, 0x6e, 0x01, 0xe6, 0xc2, 0x54, 0xca, 0xf8, 0x2d, 0xbe, 0x83, 0x1b, 0x61, 0x48,
	0x76, 0x32, 0x3c, 0x06, 0x3d, 0x3c, 0x10, 0xe6, 0x7c, 0x28, 0x99, 0x41, 0x7b, 0xb1, 0x72, 0x4c,
	0x50, 0xc6, 0x78, 0x65, 0x0d, 0x71, 0xd5, 0xc3, 0xc9, 0x7e, 0xf0, 0x16, 0x54, 0x48, 0x14, 0xc3,
	0x33, 0xcd, 0x99, 0xd2, 0x99, 0x89, 0xdb, 0xa3, 0xce, 0xf8, 0x1a, 0x1f, 0x65, 0xb2, 0x84, 0xae,
	0xdb, 0xe6, 0x7f, 0xe5, 0xa1, 0x8f, 0xf0, 0xdc, 0xd1, 0xa7, 0x24, 0x27, 0x94, 0x31, 0x55, 0x97,
	0xd6, 0x03, 0xd8, 0xc3, 0x37, 0xc2, 0x60, 0x25, 0xf9, 0xac, 0x31, 0x93, 0x5f, 0x2d, 0xe8, 0xba,
	0x69, 0xa2, 0x31, 0xbc, 0x60, 0xb4, 0x24, 0x4c, 0x95, 0x25, 0x67, 0x96, 0xf8, 0x0d, 0x36, 0x85,
	0x87, 0x8c, 0x96, 0x77, 0x8d, 0xbd, 0x74, 0x13, 0x7f, 0x0f, 0xc3, 0x9c, 0x1a, 0xb2, 0xa9, 0xa5,
	0x24, 0xa2, 0x5c, 0xab, 0x43, 0xa8, 0x3c, 0xc8, 0xa9, 0xf9, 0x5a, 0x4b, 0xf9, 0xcd, 0x79, 0x68,
	0xe4, 0xf1, 0x67, 0xd4, 0xb2, 0x9c, 0x50, 0x29, 0x3d, 0xe3, 0x3d, 0x0c, 0xc2, 0xdc, 0x39, 0x6b,
	0x26, 0x25, 0xfa, 0x00, 0x43, 0xd7, 0x07, 0x97, 0x62, 0xcf, 0xb5, 0x6f, 0xa4, 0x7b, 0xbc, 0xe1,
	0xfc, 0x6c, 0xa2, 0x37, 0xd0, 0x6f, 0xda, 0x75, 0x2a, 0xf3, 0x54, 0xf9, 0x3a, 0xf3, 0xe0, 0x24,
	0x19, 0x44, 0xcd, 0x7e, 0xd0, 0x6b, 0xe8, 0xd5, 0x86, 0xeb, 0x92, 0x16, 0x3c, 0xbc, 0xc5, 0x93,
	0x46, 0xaf, 0x20, 0xca, 0x54, 0x41, 0x45, 0x19, 0x1e, 0x62, 0x50, 0x61, 0x50, 0x9e, 0x0f, 0x12,
	0x40, 0xea, 0x1c, 0xaf, 0xf1, 0xe0, 0xdc, 0xa6, 0xf6, 0x97, 0xfb, 0xc7, 0xef, 0x67, 0xb0, 0xa6,
	0x5b, 0x35, 0xf1, 0x7c, 0x4c, 0x4e, 0x60, 0x79, 0x6b, 0x3f, 0x39, 0x93, 0x34, 0xad, 0x76, 0xdb,
	0x29, 0xad, 0xc4, 0x74, 0x7f, 0x3b, 0xfd, 0x17, 0x54, 0xeb, 0xc8, 0x7f, 0x9c, 0x3e, 0xff, 0x09,
	0x00, 0x00, 0xff, 0xff, 0x3d, 0x40, 0x21, 0xae, 0xac, 0x04, 0x00, 0x00,
}
